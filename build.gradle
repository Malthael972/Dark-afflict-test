apply plugin: 'java'

version '1.0'
targetCompatibility = 8
sourceCompatibility = 16

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

ext {
    sdkRoot = System.getenv("ANDROID_HOME") ?: System.getenv("ANDROID_SDK_ROOT")
}

dependencies {
    compileOnly "com.github.Anuken.Arc:arc-core:v147"
    compileOnly "com.github.Anuken.Mindustry:core:v147"
    annotationProcessor "com.github.Anuken:jabel:93fde537c7"
}

task jarAndroid {
    dependsOn "jar"
    doLast {
        if(!(sdkRoot || !file(sdkRoot).exists())) throw new GradleException("No Android SDK found.")

        def platformRoot = file("$sdkRoot/platforms/").listFiles().sort().reverse().find{ f -> new File(f, "android.jar").exists()}
        if(!platformRoot) throw new GradleException("No android.jar found.")

        def d8 = file("$sdkRoot/build-tools/").listFiles().sort().reverse().find{ f -> new File(f, "d8").exists() || new File(f, "d8.bat").exists()}
        if(!d8) throw new GradleException("No d8 found.")

        def d8Binary = new File(d8, System.getProperty("os.name").toLowerCase().contains("windows") ? "d8.bat" : "d8")
        def deps = (configurations.compileClasspath.asList() + configurations.runtimeClasspath.asList() + [new File(platformRoot, "android.jar")]).collect().join(" ")

        delete("build/libs/${rootProject.name}Android.jar")

        exec{
            workingDir file("build/libs")
            commandLine d8Binary.absolutePath, "--min-api", "14", "--output", "${rootProject.name}Android.jar", deps, "${rootProject.name}.jar"
        }
    }
}

jar {
    archiveFileName = "${rootProject.name}Desktop.jar"
    from(rootDir){ include "mod.json" }
    from("assets/"){ include "**" }
    from{ configurations.runtimeClasspath.collect{ it.isDirectory() ? it : zipTree(it) } }
}

task deploy(type: Jar) {
    dependsOn jarAndroid
    archiveFileName = "${rootProject.name}.jar"
    from{ 
        zipTree("build/libs/${rootProject.name}Desktop.jar")
    }
    from{ 
        zipTree("build/libs/${rootProject.name}Android.jar")
    }
    doLast{
        delete("build/libs/${rootProject.name}Desktop.jar")
        delete("build/libs/${rootProject.name}Android.jar")
    }
}
